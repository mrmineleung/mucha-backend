apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    app: {{ .Values.app.name }}
    version: {{ .Values.environment.version }}
    environment: {{ .Values.environment.name }}
spec:
  replicas: {{ .Values.environment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
      environment: {{ .Values.environment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
        version: {{ .Values.environment.version }}
        environment: {{ .Values.environment.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.environment.image }}:{{ .Values.environment.version }}"
          resources:
            requests:
              memory: "300Mi"
              cpu: "250m"
            limits:
              memory: "400Mi"
              cpu: "500m"
          ports:
            - containerPort: {{ .Values.environment.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Values.app.name }}-{{ .Values.environment.name }}-config
          volumeMounts:
            - name: {{ .Values.app.name }}-{{ .Values.environment.name }}-config-volume
              mountPath: "/.env"
              subPath: .env
              readOnly: true
      volumes:
        - name: {{ .Values.app.name }}-{{ .Values.environment.name }}-config-volume
          configMap:
            name: {{ .Values.app.name }}-{{ .Values.environment.name }}-config
            items:
                - key: BASE_URL
                  path: .env  # Mount all the key-value pairs in the ConfigMap as a single .env file



